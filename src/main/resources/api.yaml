openapi: 3.0.3
info:
  title: Bussiness management api
  description: This is used to describe the api of our future application used to manage bussiness
  version: 1.0.0
  contact:
    name: C2PSI company
    url: https://www.c2psi-prestation.com
    email: c2psi-prestation@gmail.com
servers:
  - url: '{protocol}://{host}:{port}/bm/v1'
    description: All endpoint for Demoopenapi api
    variables:
      protocol:
        enum:
          - 'http'
          - 'https'
        default: 'http'
      host:
        default: localhost
        description: The local server where the Demoopenapi api is located
      port:
        enum:
          - '8080'
          - '8081'
        default: '8081'
        description: The default port where the Demoopenapi api responds
paths:
  /test/non_secure:
    get:
      operationId: apiTest
      responses:
        '200':
          description: Sucessfull Test Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestDto'
  /test/secure:
    get:
      operationId: apiTest Secure
      responses:
        '200':
          description: Sucessfull Test secure Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestDto'
  /test/bm/v1/securebmv1:
    get:
      operationId: apiTest Securebmv1
      responses:
        '200':
          description: Sucessfull Test secure Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestDto'
########################################################################################################################
  #Api for file Uploaded with the id of the resource for which the image is uploaded
  /upload/bm/v1/person:
    $ref: 'general/uploadPerson.yaml'
  /loadresource/bm/v1/{id}:
    $ref: 'general/loadFile.yaml'


########################################################################################################################

components:
  schemas:
    TestDto:
      type: object
      properties:
        test:
          type: string
#  securitySchemes:
#    BearerAuth:
#      type: http
#      scheme: bearer
#      bearerFormat: "JWT"
#security:
#  - BearerAuth: []



   #UserbmDto:
#      $ref: 'userbm/dto/UserbmDto.yaml'

