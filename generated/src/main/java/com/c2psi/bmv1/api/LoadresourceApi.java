/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (5.3.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.c2psi.bmv1.api;

import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2023-10-01T07:39:22.173593300+01:00[Africa/Casablanca]")
@Validated
@Api(value = "loadresource", description = "the loadresource API")
public interface LoadresourceApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * GET /loadresource/bm/v1/{id} : Load a picture
     *
     * @param id The id of the element that represent the resource found. It&#39;s compulsory if not the operation can&#39;t proceed (required)
     * @return Resource found successfully (status code 200)
     */
    @ApiOperation(value = "Load a picture", nickname = "loadResourceById", notes = "", response = org.springframework.core.io.Resource.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Resource found successfully", response = org.springframework.core.io.Resource.class) })
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/loadresource/bm/v1/{id}",
        produces = { "image/_*" }
    )
    default ResponseEntity<org.springframework.core.io.Resource> _loadResourceById(@ApiParam(value = "The id of the element that represent the resource found. It's compulsory if not the operation can't proceed", required = true) @PathVariable("id") Long id) {
        return loadResourceById(id);
    }

    // Override this method
    default  ResponseEntity<org.springframework.core.io.Resource> loadResourceById(Long id) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
